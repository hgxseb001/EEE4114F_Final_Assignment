// based on: https://lloydrochester.com/post/c/convolution/

#ifndef FIR_FILTER
#define FIR_FILTER

#define FILTER_1

const int sampleSize = 100;
// const int impRespSize = 42;


float x [sampleSize];
// float h [impRespSize];

#ifdef FILTER_1
// Filter 1
const int impRespSize = 11;
float h [] = {
  0.005060316995,-3.250615494e-18, -0.04194287956,1.321043421e-17,   0.2884848118,
     0.4967954755,   0.2884848118,1.321043421e-17, -0.04194287956,-3.250615494e-18,
   0.005060316995
};
#endif

#ifdef FILTER_2
// Filter 2
const int impRespSize = 21;
float h [] = {
  1.556460367e-18, 0.003619160969,-3.26569086e-18, -0.01223825011,7.740514636e-18,
    0.03431555256,-1.327170017e-17, -0.08582925051,1.774652477e-17,    0.310583055,
     0.4990994632,    0.310583055,1.774652477e-17, -0.08582925051,-1.327170017e-17,
    0.03431555256,7.740514636e-18, -0.01223825011,-3.26569086e-18, 0.003619160969,
  1.556460367e-18
 
};
#endif

#ifdef FILTER_3
// Filter 3
const int impRespSize = 31;
float h [] = {
  -0.001700396882,1.758030117e-18, 0.002937331563,-3.276871654e-18,-0.006730091292,
  6.051933362e-18,  0.01409388799,-9.603381623e-18, -0.02678503655,1.331713885e-17,
    0.04909896106,-1.655106349e-17, -0.09693833441,1.874597898e-17,   0.3156195581,
      0.500808239,   0.3156195581,1.874597898e-17, -0.09693833441,-1.655106349e-17,
    0.04909896106,1.331713885e-17, -0.02678503655,-9.603381623e-18,  0.01409388799,
  6.051933362e-18,-0.006730091292,-3.276871654e-18, 0.002937331563,1.758030117e-18,
  -0.001700396882
};
#endif

#ifdef FILTER_4
// Filter 4
const int impRespSize = 41;
float h [] = {
  -1.561110777e-18,-0.001436826773,2.000446356e-18, 0.002439578297,-3.275448076e-18,
    -0.0045621139,5.261309997e-18, 0.008118263446,-7.763641778e-18, -0.01355980057,
  1.053749766e-17,  0.02166922204,-1.331135355e-17, -0.03409191221,1.581368492e-17,
    0.05514981598,-1.779954704e-17,  -0.1009026542,1.907454835e-17,   0.3168810904,
      0.500590682,   0.3168810904,1.907454835e-17,  -0.1009026542,-1.779954704e-17,
    0.05514981598,1.581368492e-17, -0.03409191221,-1.331135355e-17,  0.02166922204,
  1.053749766e-17, -0.01355980057,-7.763641778e-18, 0.008118263446,5.261309997e-18,
    -0.0045621139,-3.275448076e-18, 0.002439578297,2.000446356e-18,-0.001436826773,
  -1.561110777e-18
};
#endif

#ifdef FILTER_5
// Filter 5
const int impRespSize = 51;
float h [] = {
  0.001017592731,-1.628368212e-18, -0.00130588864, 7.95376097e-18, 0.002073026029,
  -3.268374855e-18,-0.003425579052,4.805333715e-18, 0.005490505137,-6.701035637e-18,
   -0.00843440555, 8.83636682e-18,  0.01250260323,-1.107715691e-17, -0.01810261048,
   1.32826082e-17,  0.02600014582,-1.531414393e-17, -0.03785149753,1.704411608e-17,
    0.05801218376,-1.836382319e-17,   -0.102575168,1.919034371e-17,   0.3168442547,
     0.4995096326,   0.3168442547,1.919034371e-17,   -0.102575168,-1.836382319e-17,
    0.05801218376,1.704411608e-17, -0.03785149753,-1.531414393e-17,  0.02600014582,
   1.32826082e-17, -0.01810261048,-1.107715691e-17,  0.01250260323, 8.83636682e-18,
   -0.00843440555,-6.701035637e-18, 0.005490505137,4.805333715e-18,-0.003425579052,
  -3.268374855e-18, 0.002073026029, 7.95376097e-18, -0.00130588864,-1.628368212e-18,
   0.001017592731
};
#endif

#ifdef FILTER_6
// Filter 6
const int impRespSize = 61;
float h [] = {
  4.571152266e-18,0.0009050123044,-1.753752766e-18,-0.001207572175,-2.87256707e-18,
   0.001801788108,-3.26889908e-18,-0.002740105614,1.644801995e-17, 0.004083424341,
  -6.03720872e-18,-0.005907355808, 7.74811808e-18, 0.008313431405,-9.580016253e-18,
   -0.01144975424,1.145284001e-17,  0.01555109955,-1.328473819e-17, -0.02102298662,
  1.499564796e-17,  0.02863785625,-1.651079469e-17, -0.04006716982,1.776395843e-17,
    0.05968958139,-1.870036989e-17,  -0.1036293879, 1.92791035e-17,   0.3172472715,
      0.499589771,   0.3172472715, 1.92791035e-17,  -0.1036293879,-1.870036989e-17,
    0.05968958139,1.776395843e-17, -0.04006716982,-1.651079469e-17,  0.02863785625,
  1.499564796e-17, -0.02102298662,-1.328473819e-17,  0.01555109955,1.145284001e-17,
   -0.01144975424,-9.580016253e-18, 0.008313431405, 7.74811808e-18,-0.005907355808,
  -6.03720872e-18, 0.004083424341,1.644801995e-17,-0.002740105614,-3.26889908e-18,
   0.001801788108,-2.87256707e-18,-0.001207572175,-1.753752766e-18,0.0009050123044,
  4.571152266e-18
};
#endif

#ifdef FILTER_7
// Filter 7
const int impRespSize = 71;
float h [] = {
  -0.0007280807476,-1.127885064e-18, 0.000843562535,-1.883703667e-18,-0.001123422291,
  7.185075262e-18, 0.001593924011,-3.273900421e-18,-0.002283864422,-5.335312056e-18,
   0.003226058325,-5.589790863e-18,-0.004459777381,2.548367774e-17, 0.006034760736,
  -8.536028293e-18,-0.008017915301,1.012998465e-17,  0.01050487999,-1.173687895e-17,
    -0.0136409495,1.330506367e-17,  0.01766135171,-1.478413788e-17, -0.02297545038,
  1.612655937e-17,  0.03036309965,-1.728918488e-17, -0.04150732979, 1.82346457e-17,
    0.06080493703,-1.893255453e-17,   -0.104418315,1.936047822e-17,   0.3179454505,
     0.5003541112,   0.3179454505,1.936047822e-17,   -0.104418315,-1.893255453e-17,
    0.06080493703, 1.82346457e-17, -0.04150732979,-1.728918488e-17,  0.03036309965,
  1.612655937e-17, -0.02297545038,-1.478413788e-17,  0.01766135171,1.330506367e-17,
    -0.0136409495,-1.173687895e-17,  0.01050487999,1.012998465e-17,-0.008017915301,
  -8.536028293e-18, 0.006034760736,2.548367774e-17,-0.004459777381,-5.589790863e-18,
   0.003226058325,-5.335312056e-18,-0.002283864422,-3.273900421e-18, 0.001593924011,
  7.185075262e-18,-0.001123422291,-1.883703667e-18, 0.000843562535,-1.127885064e-18,
  -0.0007280807476
};
#endif

#ifdef FILTER_8
// Filter 8
const int impRespSize = 81;
float h [] = {
  -1.560243788e-18,-0.0006649325369,4.221596079e-18,0.0007980786613,-1.999335452e-18,
  -0.001046669669,-1.793086652e-18, 0.001426394214,-3.273629106e-18,-0.001954342704,
  1.228734779e-17,  0.00264970772,-5.258387981e-18,-0.003534867195,-7.954209302e-18,
   0.004637052305,-7.759329686e-18,-0.005990947131,3.320187504e-17, 0.007642831653,
  -1.053164536e-17,-0.009657378308,1.193508217e-17,   0.0121292863,-1.330396104e-17,
   -0.01520422287,1.460457682e-17,  0.01911909506,-1.580490357e-17, -0.02428619377,
  1.687538447e-17,  0.03148944676,-1.778966224e-17, -0.04241694883,1.852522267e-17,
    0.06147124246,-1.906395548e-17,   -0.104820244,1.939259433e-17,   0.3180572689,
      0.500312686,   0.3180572689,1.939259433e-17,   -0.104820244,-1.906395548e-17,
    0.06147124246,1.852522267e-17, -0.04241694883,-1.778966224e-17,  0.03148944676,
  1.687538447e-17, -0.02428619377,-1.580490357e-17,  0.01911909506,1.460457682e-17,
   -0.01520422287,-1.330396104e-17,   0.0121292863,1.193508217e-17,-0.009657378308,
  -1.053164536e-17, 0.007642831653,3.320187504e-17,-0.005990947131,-7.759329686e-18,
   0.004637052305,-7.954209302e-18,-0.003534867195,-5.258387981e-18,  0.00264970772,
  1.228734779e-17,-0.001954342704,-3.273629106e-18, 0.001426394214,-1.793086652e-18,
  -0.001046669669,-1.999335452e-18,0.0007980786613,4.221596079e-18,-0.0006649325369,
  -1.560243788e-18
};
#endif

#ifdef FILTER_9
// Filter 9
const int impRespSize = 91;
float h [] = {
  0.0005655711284,-5.747757544e-18,-0.0006249973085,-6.691193222e-19,0.0007590175956,
  -2.098810331e-18,-0.0009769895114,6.588232604e-18, 0.001288853353,-3.26977279e-18,
  -0.001705374569,-2.877731779e-18,  0.00223850389,-5.00239957e-18,-0.002901905915,
  1.771795064e-17, 0.003711735131,-7.162451872e-18,-0.004687785171,-1.028516208e-17,
   0.005855211522,-9.582577204e-18,-0.007247172762,3.939893021e-17, 0.008909003809,
  -1.207527192e-17, -0.01090502273,1.328828927e-17,  0.01333015971,-1.444741085e-17,
   -0.01633086614,1.553007446e-17,  0.02014531195,-1.651520852e-17, -0.02518740855,
  1.738363732e-17,  0.03224277869,-1.811845826e-17, -0.04300058633,1.870536937e-17,
    0.06186165288,-1.913294565e-17,  -0.1049786136, 1.93928673e-17,    0.317777276,
     0.4997233152,    0.317777276, 1.93928673e-17,  -0.1049786136,-1.913294565e-17,
    0.06186165288,1.870536937e-17, -0.04300058633,-1.811845826e-17,  0.03224277869,
  1.738363732e-17, -0.02518740855,-1.651520852e-17,  0.02014531195,1.553007446e-17,
   -0.01633086614,-1.444741085e-17,  0.01333015971,1.328828927e-17, -0.01090502273,
  -1.207527192e-17, 0.008909003809,3.939893021e-17,-0.007247172762,-9.582577204e-18,
   0.005855211522,-1.028516208e-17,-0.004687785171,-7.162451872e-18, 0.003711735131,
  1.771795064e-17,-0.002901905915,-5.00239957e-18,  0.00223850389,-2.877731779e-18,
  -0.001705374569,-3.26977279e-18, 0.001288853353,6.588232604e-18,-0.0009769895114,
  -2.098810331e-18,0.0007590175956,-6.691193222e-19,-0.0006249973085,-5.747757544e-18,
  0.0005655711284
};
#endif

#ifdef FILTER_10
// Filter 10
const int impRespSize = 101;
float h [] = {
  -2.499876554e-19,0.0005253217532,-1.629146692e-18,-0.0005966855679,4.160852898e-18,
  0.0007247734466,-7.957564347e-18,-0.0009158240864,-1.017259169e-18, 0.001176449121,
  -3.269937399e-18,-0.001513772062,1.007523357e-17, 0.001935625914,-4.807631209e-18,
  -0.002450832864,-4.039686655e-18, 0.003069598693,-6.704239721e-18,-0.003804072505,
  2.274025714e-17, 0.004669151269,-8.840592058e-18,-0.005683647934,-1.226261675e-17,
   0.006872034632,-1.108245252e-17,-0.008267098106,4.437101692e-17, 0.009914112277,
  -1.328895846e-17, -0.01187765691, 1.43352981e-17,  0.01425323449,-1.532146613e-17,
   -0.01718817279,1.623190744e-17,  0.02092181332,-1.705226546e-17, -0.02586951107,
  1.776960145e-17,  0.03281859308,-1.837260288e-17, -0.04346018657,1.885176049e-17,
    0.06219738722,-1.91995188e-17,  -0.1051858366,1.941039195e-17,    0.317860961,
     0.4997484684,    0.317860961,1.941039195e-17,  -0.1051858366,-1.91995188e-17,
    0.06219738722,1.885176049e-17, -0.04346018657,-1.837260288e-17,  0.03281859308,
  1.776960145e-17, -0.02586951107,-1.705226546e-17,  0.02092181332,1.623190744e-17,
   -0.01718817279,-1.532146613e-17,  0.01425323449, 1.43352981e-17, -0.01187765691,
  -1.328895846e-17, 0.009914112277,4.437101692e-17,-0.008267098106,-1.108245252e-17,
   0.006872034632,-1.226261675e-17,-0.005683647934,-8.840592058e-18, 0.004669151269,
  2.274025714e-17,-0.003804072505,-6.704239721e-18, 0.003069598693,-4.039686655e-18,
  -0.002450832864,-4.807631209e-18, 0.001935625914,1.007523357e-17,-0.001513772062,
  -3.269937399e-18, 0.001176449121,-1.017259169e-18,-0.0009158240864,-7.957564347e-18,
  0.0007247734466,4.160852898e-18,-0.0005966855679,-1.629146692e-18,0.0005253217532,
  -2.499876554e-19
};
#endif

const int convSize = sampleSize + impRespSize-1;
float convOut [convSize];

void discreteConvolve(){
  int xStart;
  int xEnd;
  int hStart;

  for (int i=0; i<convSize; i++){
    
    if (i-impRespSize+1 > 0){
      xStart = i-impRespSize+1;
    }
    else{
      xStart = 0;
    }
    
    if (i+1 < sampleSize){
      xEnd = i+1;
    }
    else{
      xEnd = sampleSize;
    }

    
    if ( i < impRespSize-1){
      hStart = i;
    }
    else{
      hStart = impRespSize-1;
    }
    convOut[i] = 0;

    for (int j = xStart; j< xEnd; j++){
      convOut[i] += h[hStart--]*x[j];
    }
  }

}

#endif